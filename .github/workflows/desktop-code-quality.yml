name: Desktop - Code Quality

on:
  push:
    branches: [ main ]
    paths:
      - 'examples/electron/**'
      - '.github/workflows/desktop-code-quality.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'examples/electron/**'
      - '.github/workflows/desktop-code-quality.yml'
  workflow_dispatch:

concurrency:
  group: desktop-code-quality-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  desktop-format-check:
    name: Desktop - Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: examples/electron
        run: npm install

      - name: Desktop - Check code formatting
        working-directory: examples/electron
        run: |
          echo "Desktop - Checking code formatting..."
          npm run format:check
          
      - name: Desktop - Report formatting issues
        if: failure()
        run: |
          echo "::error::Desktop - Code formatting issues detected. Please run 'npm run format' in examples/electron/ to fix."
          echo "# Desktop Format Check Failed ❌" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Code formatting issues were detected in the Desktop application." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## How to fix:" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "cd examples/electron" >> $GITHUB_STEP_SUMMARY
          echo "npm run format" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  desktop-lint-check:
    name: Desktop - Lint Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install root dependencies
        run: npm install

      - name: Build core library
        run: npm run build:lib
        env:
          DATALAYER_TEST_TOKEN: ${{ secrets.DATALAYER_TEST_TOKEN }}
          DATALAYER_TEST_RUN_EXPENSIVE: ${{ secrets.DATALAYER_TEST_TOKEN != '' && 'true' || 'false' }}

      - name: Install Electron app dependencies
        working-directory: examples/electron
        run: npm ci

      - name: Desktop - Run ESLint
        working-directory: examples/electron
        run: |
          echo "Desktop - Running ESLint..."
          npm run lint -- --max-warnings 0
          
      - name: Desktop - Report lint issues
        if: failure()
        run: |
          echo "::error::Desktop - Linting issues detected. Please run 'npm run lint:fix' in examples/electron/ to fix auto-fixable issues."
          echo "# Desktop Lint Check Failed ❌" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ESLint issues were detected in the Desktop application." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## How to fix:" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "cd examples/electron" >> $GITHUB_STEP_SUMMARY
          echo "npm run lint:fix" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Note: Some issues may require manual fixes." >> $GITHUB_STEP_SUMMARY

  desktop-type-check:
    name: Desktop - Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install root dependencies
        run: npm install

      - name: Build core library
        run: npm run build:lib
        env:
          DATALAYER_TEST_TOKEN: ${{ secrets.DATALAYER_TEST_TOKEN }}
          DATALAYER_TEST_RUN_EXPENSIVE: ${{ secrets.DATALAYER_TEST_TOKEN != '' && 'true' || 'false' }}

      - name: Install Electron app dependencies
        working-directory: examples/electron
        run: npm ci

      - name: Desktop - Run TypeScript type checking
        working-directory: examples/electron
        run: |
          echo "Desktop - Running TypeScript type checking..."
          npm run type-check
          
      - name: Desktop - Report type errors
        if: failure()
        run: |
          echo "::error::Desktop - TypeScript type errors detected. Please fix the type errors in examples/electron/."
          echo "# Desktop Type Check Failed ❌" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "TypeScript type errors were detected in the Desktop application." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## How to check locally:" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "cd examples/electron" >> $GITHUB_STEP_SUMMARY
          echo "npm run type-check" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
